{"version":3,"sources":["images/beeza.png","js/Components/Footer.tsx","js/Utils/Cookies.tsx","js/Components/Header.tsx","js/Redux/actions/authActions.ts","js/Redux/actions/types.ts","js/Events/Events.tsx","js/Events/EventType.tsx","js/Utils/Delegate.tsx","js/Components/Account/LoginRegister.tsx","js/Components/Account/Account.tsx","js/Components/Account/Components/Navigation.tsx","js/Components/Account/Views/AdRenderer.tsx","js/Components/Account/MyAds.tsx","js/Components/Account/PostAd.tsx","js/Components/Account/Profile.tsx","js/Components/Views/AdRenderer.tsx","js/Components/Views/AdsRenderer.tsx","js/Components/Home.tsx","js/Components/Shops.tsx","js/Components/Main.tsx","App.tsx","serviceWorker.ts","js/Redux/reducers/authReducers.ts","js/Redux/reducers/index.ts","js/Redux/store.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Footer","react","React","Cookies","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookieValue","name","ca","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","c","value","charAt","substring","indexOf","err","return","Header","state","isLoggedIn","showLogOutLinkDelegate","showLogOutLink","condition","_this","setState","logOut","fetch","method","then","res","json","obj","catch","error","console","logoutLink","log","this","props","profileUrl","isCookie","react_default","a","createElement","react_router_dom","className","to","onClick","src","logo","alt","exact","activeClassName","Component","connect","authState","newState","login","loginLogout","dispatch","type","payload","Events","addEventListener","handler","eRegister","touchList","list","length","removeEventListener","index","options","arguments","item","i","call","scope","EventType","LOG_IN","Delegate","listener","_arguments","Object","classCallCheck","apply","LoginRegister","accountState","activeLoginOption","hideForms","notificationMessage","showNotification","fetchFormdata","url","data","body","JSON","stringify","headers","Accept","Content-Type","loggedIn","registered","loginFormElem","getElementById","registerFormElem","remove","showNotificationPopup","msg","message","hideNotification","formSubmitHandle","event","preventDefault","form","target","FormData","userdata","keys","get","action","validateUsername","validateEmail","match","validatePassword","toggleLoginRegister","activeLogin","dataset","activeOption","data-active-option","id","onSubmit","placeholder","onFocus","onBlur","required","Account","possibleConstructorReturn","getPrototypeOf","user","requestUserData","loggedInStateUpdate","self","assertThisInitialized","cont","LoginRegister_LoginRegister","react_router","Navigation","AdRenderer","adData","_id","description","price","title","deleteAd","adsData","ads","editAd","MyAds","loadLatestAds","values","newAds","push","AdRenderer_AdRenderer","key","Navigation_Navigation","PostAd","postAd","postdata","adPosted","reset","htmlFor","defaultChecked","rows","Profile","userData","email","location","username","AdsRenderer","Views_AdRenderer_AdRenderer","Home","AdsRenderer_AdsRenderer","Shops","Main","path","component","App","Components_Header","Main_Main","Footer_Footer","Boolean","window","hostname","initialState","authenticated","combineReducers","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef1e8c56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beeza.a4d45225.png\";","import * as React from \"react\";\n\nexport default class Footer extends React.Component {\n\n\t/*\n\t *  render DOM\n\t */\n\tpublic render() {\t\t\n\n\t\treturn (\n\t\t\t<h4>Footer component</h4>\n\t\t)\n\t}\n}","export default class Cookies  {\n\n    public static setCookie = (cname: string, cvalue: string, exdays: number) => {\n        const d = new Date();\n        d.setTime(d.getTime() + (exdays*24*60*60*1000));\n\n        const expires = \"expires=\"+ d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    }\n    \n    public static getCookieValue = (cname: string) => { \n        const name = cname + \"=\";\n        const ca = document.cookie.split(';');\n        for(const caItem of ca) {\n            let c = caItem;\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.split('=')[1];\n            }\n        }\n        return \"\";\n    }\n    \n}","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n// import Events from \"../Events/Events\";\n// import EventType from \"../Events/EventType\";\nimport Cookies from \"../Utils/Cookies\";\n// import Delegate from \"../Utils/Delegate\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../Redux/actions/authActions\";\n\n// style statics\nimport logo from \"../../images/beeza.png\";\nimport \"../../styles/Header.css\";\n\ninterface IState {\n\tisLoggedIn: boolean\n}\n// export default connect<{}, {}, {}>(mapStateToProps)(Header);\nclass Header extends React.Component<{}, IState> {\n\n\tpublic state = {\n\t\tisLoggedIn: false\n\t}\n\n\tprivate showLogOutLinkDelegate = {};\n\n\t// constructor(props: object){\n\t// \tsuper(props);\n\t\t// const self = this;\n\n\t\t// this.showLogOutLinkDelegate = new Delegate(self.showLogOutLink, self);\t\t\n\t\t// Events.addEventListener(EventType.LOG_IN, self.showLogOutLinkDelegate);\n\n\t// }\n\n\t/*\n\t *  render DOM\n\t */\n\tpublic render() {\n\n\t\tconsole.log(\"props \", this.props);\n\n\t\tlet logoutLink;\n\t\tlet profileUrl = \"/account\";\n\t\tconst isCookie = Cookies.getCookieValue(\"dollar\");\n\n\t\tif (this.state.isLoggedIn || isCookie !== \"\") {\n\t\t\tlogoutLink = <Link className=\"mainMenuItem\" to=\"/\" onClick={this.logOut}>Logout</Link>;\n\t\t\tprofileUrl = \"/account/profile\";\n\t\t}\n\t\n\t\treturn (\n\t\t\t<header className=\"mainHeader\">\n\t\t\t\t\n\t\t\t\t<div className=\"mainHeaderLogoWrapper\">\n\t\t\t\t\t<Link className=\"mainHeaderLogo\" to=\"/\">\n\t\t\t\t\t\t<img className=\"mainHeaderLogoImage\" src={logo} alt=\"beeza\" />\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div className=\"mainMenu\">\n\t\t\t\t\t<NavLink exact={true} activeClassName=\"mainMenuItemActive\" className=\"mainMenuItem\" to=\"/\">Home</NavLink>\n\t\t\t\t\t<NavLink exact={true} activeClassName=\"mainMenuItemActive\" className=\"mainMenuItem\" to=\"/shops\">Shops</NavLink>\n\t\t\t\t\t<NavLink exact={true} activeClassName=\"mainMenuItemActive\" className=\"mainMenuItem\" to={profileUrl}>Account</NavLink>\n\t\t\t\t\t{logoutLink}\n\t\t\t\t</div>\n\n\t\t\t</header>\n\t\t)\n\t}\n\n\tprivate showLogOutLink = (condition: boolean) => {\n\t\tthis.setState({\n\t\t\tisLoggedIn: condition\n\t\t});\n\t}\n\n\tprivate logOut = () => {\n\n        fetch(\"/account/logout\", { \n            method: 'POST'\n            })\n            .then(res => res.json())\n            .then((obj) => {\n\n            \tthis.showLogOutLink(false);\n\n            })\n\t\t\t.catch(error => console.error(error));\n\t}\n\n\t\n}\n\nconst mapStateToProps = (state: any) => ({\n\tauthState: state.authState.newState\n});\n\nexport default connect( mapStateToProps, { login } )(Header);","import { LOGIN, LOGOUT } from \"./types\";\n\nexport const login = (loginLogout: void) => (dispatch: any) => {\n\tconsole.log(\"test\");\n\tdispatch({\n\t\ttype: LOGIN,\n\t\tpayload: loginLogout\n\t});\n}\n\nexport const logout = (loginLogout: void) => (dispatch: any) => {\n\tdispatch({\n\t\ttype: LOGOUT,\n\t\tpayload: loginLogout\n\t});\n}","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";","export default class Events {\n\n    public static addEventListener = (type: string, handler: object) => {\n        if(!Events.eRegister) {\n            Events.eRegister = {};\n            Events.touchList = {};\n        }\n\n        const list = Events.eRegister[type];\n        if(list) {\n            list[list.length] = handler;\n        } else {\n            Events.eRegister[type] = [handler];\n        }\n\n    }\n\n    public static removeEventListener = (type: string, handler: object) => {\n        if(!Events.eRegister) {\n            return;\n        }\n\n        const list = Events.eRegister[type];\n        let index;\n        if(list && (index = list.indexOf(handler)) > -1) {\n            list[index] = undefined;\n            Events.touchList[type] = true;\n        }\n    }\n    \n    public static dispatch = (type: string, options: object = {}) => {\n\n        if(!Events.eRegister) {\n            return;\n        }\n\n        // const type = event.type;\n        const list = Events.eRegister[type];\n        let item;\n        if(list) {\n\n            // dispatch\n            for (var i = 0; i < list.length; i++) {\n                item = list[i];\n\n                try {\n                    if(item) {\n                        item.call(item.scope, options);\n                    }\n                } catch (error) {\n                    console.log(\"Events: \", error);\n                }\n            }\n        }\n    }\n\n    private static eRegister: any = {};\n    private static touchList: any = {};\n\n}","export default abstract class EventType {         \n    public static LOG_IN = \"LOG_IN\";\n}","export default class Delegate {\n\n    constructor(listener: any, scope: object){\n        return () => { \n            listener.apply(null, [arguments, scope]);\t\n        }\n    }\n        \n}","import * as React from \"react\";\nimport Events from \"../../Events/Events\";\nimport EventType from \"../../Events/EventType\";\n\n// style imports\nimport \"./../../../styles/Account/LoginRegister.css\"\n\ninterface IState { \n    activeLoginOption: boolean, \n    showNotification: boolean, \n    hideForms: boolean, \n    notificationMessage: string \n}\n\nexport default class LoginRegister extends React.Component<{}, IState> {\n\n    public state = {\n        accountState: false,\n        activeLoginOption: true,\n        hideForms: false,\n        notificationMessage: \"\",\n        showNotification: false\n    }\n\n    /*\n\t *  render DOM\n\t */\n\tpublic render() {\n\t\treturn (\n            <div className={this.state.activeLoginOption? \"loginRegisterBlock loginActive\" : \"loginRegisterBlock registerActive\"}>\n\n\t\t\t\t<h2 className=\"loginRegisterBlockTitle\">Account Login/Register</h2>\n\n\t\t\t\t<p className=\"loginRegisterBlockCaption\">Login or register new account here</p>\n\n\t\t\t\t<div className=\"loginRegisterToggle\">\n\t\t\t\t\t<span onClick={this.toggleLoginRegister} data-active-option=\"true\" className=\"loginRegisterToggleButton loginToggleButton\">Login</span>\n\t\t\t\t\t<span onClick={this.toggleLoginRegister} data-active-option=\"false\" className=\"loginRegisterToggleButton registerToggleButton\">Register</span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"loginRegisterForms\">\n\n                    <div className={this.state.showNotification ? \"loginRegisterFormsNotification\" : \"loginRegisterFormsNotification loginRegisterFormsNotificationHide\"}>\n                        <div className=\"loginRegisterFormsNotificationtextWrapper\">\n                            <p className=\"loginRegisterFormsNotificationText\">{this.state.notificationMessage}</p>\n                            <span className=\"loginRegisterFormsNotificationClose closeIC\" onClick={this.hideNotification}>&nbsp;</span>\n                        </div>\n                    </div>\n\n\t\t\t\t\t<form id=\"loginForm\" className=\"loginRegisterForm loginForm\" action=\"/account/loginUser\" onSubmit={this.formSubmitHandle}>\n\n                        <span className=\"loginRegisterFormInputWrapper userIC\">\n                            <input className=\"loginRegisterFormInput\" type=\"text\" placeholder=\"Username\" name=\"username\" onFocus={this.hideNotification} onBlur={this.validateUsername} required={true} />\n                        </span>\n\t\t\t\t\t\t\n                        <span className=\"loginRegisterFormInputWrapper passwordIC\">\n                            <input className=\"loginRegisterFormInput\" type=\"password\" placeholder=\"Password\" name=\"password\" onFocus={this.hideNotification} onBlur={this.validatePassword}  required={true} />\n                        </span>\n\t\t\t\t\t\t\n                        <span className=\"loginRegisterFormInputWrapper\">\n                            <input className=\"loginRegisterFormInput loginRegisterFormSubmit\" type=\"submit\" value=\"Login\" />\n                        </span>\n\t\t\t\t\t\t\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<form id=\"registerForm\" className=\"loginRegisterForm registerForm\" action=\"/account/registerUser\" onSubmit={this.formSubmitHandle}>\n\n                        <span className=\"loginRegisterFormInputWrapper userIC\">\n                            <input className=\"loginRegisterFormInput\" type=\"text\" placeholder=\"Username\" name=\"username\" onFocus={this.hideNotification} onBlur={this.validateUsername} required={true}/>\n                        </span>\n\n                        <span className=\"loginRegisterFormInputWrapper emailIC\">\n                            <input className=\"loginRegisterFormInput\" type=\"email\" placeholder=\"Email\" name=\"email\" onFocus={this.hideNotification} onBlur={this.validateEmail} required={true}/>\n                        </span>\n\n                        <span className=\"loginRegisterFormInputWrapper passwordIC\">\n                            <input className=\"loginRegisterFormInput passwordIC\" type=\"password\" placeholder=\"Password\" name=\"password\" onFocus={this.hideNotification} onBlur={this.validatePassword} required={true}/>\n                        </span>\t\t\t\t\t\n\n                        <span className=\"loginRegisterFormInputWrapper\">\n                            <input className=\"loginRegisterFormInput loginRegisterFormSubmit\" type=\"submit\" value=\"Register\" />\n                        </span>\n\n\t\t\t\t\t</form>\n\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n\t/*\n\t * Handle login/register fetch requests to server \n\t */\n\tprivate fetchFormdata = (url: string = \"\", data: object = {}) => {\n\n\t\tfetch(url, {\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n            })\n            .then(res => res.json())\n            .then((obj) => {\n\n                if( (typeof obj.loggedIn !== \"undefined\" && obj.loggedIn) || (typeof obj.registered !== \"undefined\" && obj.registered) ) {\n                    // user logged in or registered!!!\n                    const loginFormElem: any = document.getElementById(\"loginForm\");\n                    const registerFormElem: any = document.getElementById(\"registerForm\");\n\n                    loginFormElem.remove();\n                    registerFormElem.remove();\n\n                    // notify we are logged in now\n                    return Events.dispatch(EventType.LOG_IN, {data: obj});\n                                        \n                }\n                \n                this.showNotificationPopup(obj.msg);\n                \n            })\n\t\t\t.catch(error => console.error(error));\n\t\t\t\n    }\n\n    /*\n     * Show notification with dedicated message with in it\n     */\n    private showNotificationPopup = (message: string) => {\n        this.setState({\n            notificationMessage: message,\n            showNotification: true\n        });\n    }\n\n    /*\n     * Hide notification element by changing state of it, only if it is shown\n     */\n    private hideNotification = () => {\n        if(this.state.showNotification) {\n            this.setState({\n                showNotification: false\n            });\n        }\n    }\n\n\t/*\n\t * Login/Register form submit handler\n\t */\n\tprivate formSubmitHandle = (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\n\t\tconst form: any = event.target;\n\t\tconst data = new FormData(form);\n\t\tconst userdata: any = {};\n\n\t\tfor (const name of data.keys()) {\n\t\t\tuserdata[name] = data.get(name);\n\t\t}\n\n\t\tthis.fetchFormdata(form.action, userdata);\n\t}\n\n\t/*\n\t * Validate username by checking if field is not empty\n\t */\n\tprivate validateUsername = (event: any) => {\n\t\tif(event.target.value.length === 0) {\n            this.showNotificationPopup('Please enter username');\n        }\n\t}\n\n\t/*\n\t * Validate email format\n\t */\n\tprivate validateEmail = (event: any) => {\n\t\tconst mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,9})+$/;\n\n\t\tif(!event.target.value.match(mailformat)) {\n            this.showNotificationPopup('You have entered an invalid email address');\n        }\n\t}\n\n\t/*\n\t * Validate password format not to be shorther than 8 characters\n\t */\n\tprivate validatePassword = (event: any) => {\n\t\tif(event.target.value.length < 8) {\n            this.showNotificationPopup('Password must be at least 8 characters');\n        }\n\t}\n\n\t/*\n\t * Toggle login or register form button handler\n\t * update state to set correct style class\n\t */\n\tprivate toggleLoginRegister = (event: any) => {\n        const activeLogin = (event.target.dataset.activeOption === \"true\");\n\n        this.setState({\n            activeLoginOption: activeLogin,\n            showNotification: false\n        });\n        \n\t}\n}","import * as React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Events from \"../../Events/Events\";\nimport EventType from \"../../Events/EventType\";\nimport Delegate from \"../../Utils/Delegate\";\nimport LoginRegister from \"./LoginRegister\";\n\n\n// style imports\nimport \"./../../../styles/Account/Account.css\"\n\ninterface IState {\n\tisLoggedIn: number,\n\tuser: object\n}\n\nexport default class Account extends React.Component<{}, IState> {\n\n\tpublic state = {\n\t\tisLoggedIn: 2, // 1 - go to user area when logged in; 2 - show login/register;\n\t\tuser: {}\n\t}\n\n\tprivate showLogOutLinkDelegate = {};\n\n\t/*\n\t *  constructor with fetch call to server to get user details\n\t */\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tconst self = this;\n\n\t\tthis.showLogOutLinkDelegate = new Delegate(self.loggedInStateUpdate, self);\n\t\tEvents.addEventListener(EventType.LOG_IN, self.showLogOutLinkDelegate);\n\n\t\tthis.requestUserData();\n\t}\n\n\t\t/*\n\t *  Render jumbo bumbo\n\t */\n\tpublic render() {\n\n\t\tlet cont = <LoginRegister  />;\n\n\t\t// redirect after log in\n\t\tif(this.state.isLoggedIn === 1 ) {\n\t\t\tcont = <Redirect to=\"/account/profile\"/>;\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{cont}\n\t\t\t</ React.Fragment>\n\t\t)\n\t  \t\n\t}\n\n\t/*\n\t * clean up component\n\t */ \n\tpublic componentWillUnmount () {\n\t\tconst self = this;\n\n\t\tEvents.removeEventListener(EventType.LOG_IN, self.showLogOutLinkDelegate);\n\t}\n\n\t/*\n\t * get user data\n\t */ \n\tprivate requestUserData = () => {\n\n\t\tfetch(\"/account/getUser\", { method: 'GET' })\n\t\t.then(res => res.json())\n\t\t.then((obj) => {\n\n\t\t\tif( typeof obj.loggedIn !== \"undefined\" && obj.loggedIn ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoggedIn: 1,\n\t\t\t\t\tuser: obj\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoggedIn: 2\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(error => console.error(error));\n\n\t}\n\n\t/*\n\t *  redirect after logged in\n\t */\n\tprivate loggedInStateUpdate = (options: any) => {\n\n\t\t// this._requestUserData();\n\t\t\n\t\tif ( typeof(options) !== undefined && options.length > 0 &&  options[0].data.loggedIn ) {\n\t\t\tthis.setState({\n\t\t\t\tisLoggedIn: 1\n\t\t\t});\n\t\t}\n\t\t\n\t}\n}","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n\n// style imports\nimport \"./../../../../styles/Account/Navigation.css\"\n\nexport default class Navigation extends React.Component {\n\n    public render() {\n\n        return (\n            <div className=\"accountNavigation\">\n                <NavLink exact={true} className=\"accountNavigation-Link\" activeClassName=\"accountNavigation-Link_Active\" to=\"/account/profile\">My profile</NavLink>\n                <NavLink exact={true} className=\"accountNavigation-Link\" activeClassName=\"accountNavigation-Link_Active\" to=\"/account/my-ads\">My ads</NavLink>\n                <NavLink exact={true} className=\"accountNavigation-Link\" activeClassName=\"accountNavigation-Link_Active\" to=\"/account/post-ad\">Post ad</NavLink>\n            </div>\n            \n        )\n\n    }\n    \n}","import * as React from \"react\";\n\ninterface IProps { adData: {\n        _id: string,\n        description: string,\n        price: string,\n        title: string\n    }\n}\n\nexport default class AdRenderer extends React.Component<IProps> {\n\n\tpublic props = {\n        adData: {\n            _id: \"\",\n            description: \"\",\n            price: \"\",\n            title: \"\"\n        }\n    }\n\n    constructor(props: any) {\n        super(props);\n\n        this.props = props;\n    }\n\n    public render() {\n        return (\n          <div className=\"listItem\">\n              <h4 className=\"listItemTitle\">{this.props.adData.title}</h4>\n              <p className=\"listItemPrice\">{this.props.adData.price}</p>\n              <p className=\"listItemDescrition\">{this.props.adData.description}</p>\n              <span onClick={this.editAd}>Edit ad</span>\n              <span onClick={this.deleteAd}>Delete ad</span>\n          </div>      \n      );\n  }\n\n    private deleteAd = () => {\n        fetch(\"/ad/delete?id=\" + this.props.adData._id, { method: 'POST' })\n        .then(res => res.json())\n\t\t.then((obj) => {\n\t\t\tthis.setState({\n\t\t\t\tadsData: obj.ads\n\t\t\t});\n\t\t})\n\t\t.catch(error => console.error(error));\n    }\n\n    private editAd = () => {\n        // this is test\n    }\n\n\t\n}","import * as React from \"react\";\nimport Cookies from \"../../Utils/Cookies\";\nimport Navigation from \"./Components/Navigation\";\nimport AdRenderer from \"./Views/AdRenderer\";\n\nimport \"../../../styles/Listing/List.css\";\n\ninterface IState { adsData: object }\n\nexport default class MyAds extends React.Component<{}, IState> {\n\n\tpublic state = {\n\t\tadsData: {}\n    }\n    \n    private cookie = \"\";\n\n\tconstructor(props: object){\n\t\tsuper(props);\n\n        this.cookie = Cookies.getCookieValue(\"dollar\");\n        this.loadLatestAds();\n        \n\t}\n\n    public render() {\n\n        if(this.cookie === \"0\" || this.cookie === \"\") {\n            return (\n                <div className=\"accountPage\">\n\n                    <p>Nothing here</p>\n\n                </div>\n            )\n        }\n\n        const ads: any = Object.values(this.state.adsData);\n        const newAds = [];\n        \n        for (let i=0; i<ads.length; i++){\n            newAds.push(<AdRenderer key={i} adData={ads[i]} />);\n        }\n\n        return (\n            <div className=\"accountPage\">\n\n                <h2>My Ads</h2>\n                \n                <Navigation/>\n\n                <div className=\"listItems\">\n                    {newAds}    \n                </div>\n            \n            </div>\n        )\n    }\n\n    private loadLatestAds = () => {\n\n\t\tfetch(\"/ads/load?owner=\" + this.cookie, { method: 'GET' })\n\t\t.then(res => res.json())\n\t\t.then((obj) => {\n\t\t\tthis.setState({\n\t\t\t\tadsData: obj.ads\n\t\t\t});\n\t\t})\n\t\t.catch(error => console.error(error));\n\t}\n\n}","import * as React from \"react\";\nimport Cookies from \"../../Utils/Cookies\";\nimport Navigation from \"./Components/Navigation\";\n\n// style imports\nimport \"./../../../styles/Account/PostAd.css\"\n\ninterface IState {\n    notificationMessage: string,\n    showNotification: boolean\n}\n\nexport default class PostAd extends React.Component<{}, IState> {\n\n    public state = {\n        notificationMessage: \"\",\n        showNotification: false\n    };\n\n    private cookie = \"\";\n\n    constructor(props: object) {\n        super(props);\n\n        this.cookie = Cookies.getCookieValue(\"dollar\");\n    }\n\n    /*\n\t *  Render jumbo bumbo\n\t */\n\tpublic render() {\n\n        if(this.cookie === \"0\" || this.cookie === \"\") {\n            return (\n                <div className=\"accountPage\">\n\n                    <p>Nothing here</p>\n\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"postAdPage\">\n\n                <h2>Post new ad here</h2>\n\n                <Navigation/>\n\n                <div className={this.state.showNotification ? \"postAdPageNotification postAdPageNotificationActive\" : \"postAdPageNotification\"}>\n                    <p className=\"postAdPageNotificationText\">{this.state.notificationMessage}</p>\n                    <span className=\"postAdPageNotificationClose closeIC\" onClick={this.hideNotification}>&nbsp;</span>\n                </div>\n\n                <form className=\"postAdForm\" onSubmit={this.postAd}>\n\n                    <div className=\"postAdFormLine\">\n                        <div className=\"postAdFormSubLine\">\n                            <label className=\"postAdFormLineLabel\" htmlFor=\"live\">Live</label>\n                            <input type=\"radio\" defaultChecked={true} name=\"live\" id=\"live\" value=\"true\" onFocus={this.hideNotification}/>\n                        </div>\n                        \n                        <div className=\"postAdFormSubLine\">\n                            <label className=\"postAdFormLineLabel\" htmlFor=\"no-live\">Not live</label>\n                            <input type=\"radio\" name=\"live\" id=\"no-live\" value=\"false\" onFocus={this.hideNotification}/>\n                        </div>\n                        \n                    </div>\n\n                    <div className=\"postAdFormLine\">\n                        <input className=\"postAdFormLineField\" type=\"text\" required={true} name=\"title\" placeholder=\"Ad title\" onFocus={this.hideNotification}/>\n                    </div>\n\n                    <div className=\"postAdFormLine\">\n                        <input className=\"postAdFormLineField\" type=\"number\" required={true} name=\"price\" placeholder=\"Price\" onFocus={this.hideNotification}/>\n                    </div>\n                    \n                    <div className=\"postAdFormLine\">\n                        <textarea className=\"postAdFormLineField\" required={true} placeholder=\"Description\" rows={8} name=\"description\" onFocus={this.hideNotification}/>\n                    </div>\n                    \n                    <div className=\"postAdFormLine\">\n                        <input className=\"postAdFormLineSubmit\" type=\"stubmit\" value=\"Post ad\" />\n                    </div>\n\n                </form>\n\n            </div>\n        )\n\n\t}\n\n    private postAd = (event: React.FormEvent) => {\n        event.preventDefault();\n\n        const form: any = event.target;\n\t\tconst data = new FormData(form);\n\t\tconst postdata: any = {};\n\n\t\tfor (const name of data.keys()) {\n\t\t\tpostdata[name] = data.get(name);\n        }\n        \n        fetch(\"/ad/post\", {\n            body: JSON.stringify(postdata),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST'\n            })\n            .then(res => res.json())\n            .then((obj) => {\n                if( (typeof obj.adPosted !== \"undefined\" && obj.adPosted) ) {\n                    form.reset();\n                    this.showNotification(obj.msg);\n                                        \n                } else {\n                    return;\n                }\n                \n            })\n\t\t\t.catch(error => console.error(error));\n    }\n\n    private showNotification = (message: string) => {\n        this.setState({\n            notificationMessage: message,\n            showNotification: true\n        });\n    }\n\n    private hideNotification = () => {\n        if(this.state.showNotification) {\n            this.setState({\n                notificationMessage: \"\",\n                showNotification: false\n            });\n        }\n    }\n\t\n}","import * as React from \"react\";\nimport Cookies from \"../../Utils/Cookies\";\nimport Navigation from \"./Components/Navigation\";\n\ninterface IState {\n    isLoggedIn: number,\n    userData: {\n        email: string,\n        id: string,\n        location: string,\n        name: string,\n        username: string\n    }\n}\n\nexport default class Profile extends React.Component<{}, IState> {\n\n    public state = {\n        isLoggedIn: 0,\n        userData: {\n            email: \"\",\n            id: \"\",\n            location: \"\",\n            name: \"\",\n            username: \"\"\n        }\n    }\n\n    private cookie = \"\";\n\n    /*\n\t *  constructor with fetch call to server to get user details\n\t */\n\tconstructor(props: any){\n\t\tsuper(props);\n        \n        this.cookie = Cookies.getCookieValue(\"dollar\");\n\t\tthis.requestUserData();\n    }\n    \n    public render() {\n\n        if(this.cookie === \"0\" || this.cookie === \"\") {\n            return (\n                <div className=\"accountPage\">\n\n                    <p>Nothing here</p>\n\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"accountPage\">\n\n                <h2>My Profile</h2>\n\n                <Navigation/>\n\n                <div className=\"accountDetails\">\n\n                    <h4>Your account details</h4>\n\n                    <h5>Username:</h5>\n                    <p>{this.state.userData.username}</p>\n\n                    <h5>Email:</h5>\n                    <p>{this.state.userData.email}</p>\n\n                    <h5>Name:</h5>\n                    {this.state.userData.name ? \n                        <p>{this.state.userData.name}</p>\n                        : <input type=\"text\" placeholder=\"enter your name\" />\n                    }\n\n                    <h5>Location:</h5>\n                    {this.state.userData.location ? \n                        <p>{this.state.userData.location}</p>\n                        : <input type=\"text\" placeholder=\"enter your location\" />\n                    }\n\n                </div>\n\n            </div>\n        )\n\n    }\n\n    private requestUserData = () => {\n\n\t\tfetch(\"/account/getUser\", { method: 'GET' })\n\t\t.then(res => res.json())\n\t\t.then((obj) => {\n\n\t\t\tif( typeof obj.loggedIn !== \"undefined\" && obj.loggedIn ) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoggedIn: 1,\n\t\t\t\t\tuserData: obj\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoggedIn: 2\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t})\n\t\t.catch(error => console.error(error));\n\n\t}\n}","import * as React from \"react\";\n\ninterface IProps { adData: object }\n\nexport default class AdRenderer extends React.Component<IProps> {\n\n\tpublic props = {\n        adData: {\n            description: \"\",\n            price: \"\",\n            title: \"\"\n        }\n    }\n\n    constructor(props: any) {\n        super(props);\n\n        this.props = props;\n    }\n\n\tpublic render() {\n\t  \treturn (\n            <div className=\"listItem\">\n                <h4 className=\"listItemTitle\">{this.props.adData.title}</h4>\n                <p className=\"listItemPrice\">{this.props.adData.price}</p>\n                <p className=\"listItemDescrition\">{this.props.adData.description}</p>\n            </div>      \n\t\t);\n\t}\n}","import * as React from \"react\";\nimport AdRenderer from \"./AdRenderer\";\n\nimport \"./../../../styles/Listing/List.css\";\n\ninterface IProps { adsData: object }\n\nexport default class AdsRenderer extends React.Component<IProps> {\n\n    public props = {\n        adsData: {}\n    }\n\n    constructor(props: any){\n        super(props);\n        \n        this.props = props;\n    }\n\n\tpublic render() {\n\n        const ads: any = Object.values(this.props.adsData);\n        const newAds = []; \n        \n        for (let i=0; i<ads.length; i++){\n            newAds.push(<AdRenderer key={i} adData={ads[i]} />);\n        }\n        \n        return (    \n            <div className=\"listItems\">\n                {newAds}\n            </div>\n        );\n\n\t  \t\n\t}\n}","import * as React from \"react\";\nimport AdsRenderer from \"./Views/AdsRenderer\";\n\nimport \"../../styles/Home/Home.css\";\n\ninterface IState { adsData: object }\n\nexport default class Home extends React.Component<{}, IState> {\n\n\tpublic state = {\n\t\tadsData: {}\n\t}\n\n\tconstructor(props: object){\n\t\tsuper(props);\n\n\t\tthis.loadLatestAds();\n\t}\n\n\tpublic render() {\n\t\t\n\t\t\treturn (\n\t\t\t\t<div className=\"homepageView\">\n\t\t\t\t\t<h4 className=\"homepageViewTitle\">Latest ads</h4>\n\t\t\t\t\t<AdsRenderer adsData={this.state.adsData} />\n\t\t\t\t</div>\n\t\t\t);\n\n\t}\n\n\tprivate loadLatestAds = () => {\n\t\tfetch(\"/ads/load\", { method: 'GET' })\n\t\t.then(res => res.json())\n\t\t.then((obj) => {\n\t\t\tthis.setState({\n\t\t\t\tadsData: obj.ads\n\t\t\t});\n\t\t})\n\t\t.catch(error => console.error(error));\n\t}\n}","import * as React from \"react\";\n// import * as ReactDOM from 'react-dom';\n// import { Route, BrowserRouter as Router, Link } from 'react-router-dom';\n\n\nexport default class Shops extends React.Component {\n\tpublic render() {\n\t  return (\n\t\t<div>\n\t\t  <div>Shops</div>\n\t\t</div>);\n\t}\n  }","import * as React from \"react\";\nimport { Route } from 'react-router-dom';\n\nimport Account from './Account/Account';\nimport MyAds from \"./Account/MyAds\";\nimport PostAd from \"./Account/PostAd\";\nimport Profile from \"./Account/Profile\";\nimport Home from './Home';\nimport Shops from './Shops';\n\n\n// style imports\nimport \"../../styles/Main.css\";\n\nexport default class Main extends React.Component {\n\n\t/*\n\t *  render DOM\n\t */\n\tpublic render() {\t\t\n\n\t\treturn (\n\t\t\t<div className=\"mainBlock\">\n\n\t\t\t\t<Route exact={true} path=\"/\" component={Home}/>\n\t\t\t\t<Route exact={true} path=\"/shops\" component={Shops}/>\n\t\t\t\t<Route exact={true} path=\"/account\" component={Account} />\n\t\t\t\t<Route exact={true} path=\"/account/post-ad\" component={PostAd} />\n                <Route exact={true} path=\"/account/my-ads\" component={MyAds} />\n                <Route exact={true} path=\"/account/profile\" component={Profile} />\n\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}","import * as React from \"react\";\n\n// Components\nimport { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"./js/Components/Footer\";\nimport Header from \"./js/Components/Header\";\nimport Main from \"./js/Components/Main\";\n\n\n\n// style imports\nimport \"./styles/App.css\";\nimport \"./styles/Config.css\";\nimport \"./styles/Fonts.css\";\nimport \"./styles/Icons.css\";\n\n\nexport default class App extends React.Component {\n\n\tpublic render() {\n\t\treturn(\n            <React.Fragment>\n                <BrowserRouter>\n                    <Header />\n                    <Main />\n                    <Footer />\n                </BrowserRouter>\n            </React.Fragment>\n\t\t)\t\t\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN, LOGOUT } from \"../actions/types\";\n\nconst initialState = {\n\tauthenticated: false\n}\n\nexport default function(state = initialState, action: any) {\n\n\tswitch (action.type) {\n\n\t\tcase LOGIN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewState: action.payload\n\t\t\t}\n\n\t\tcase LOGOUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewState: action.payload\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\n\nexport default combineReducers({\n\tauthState: authReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\t(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n\t)\t\t\n\t\n);\n\nexport default store;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\"; \nimport store from \"./js/Redux/store\";\n\nReactDOM.render(    \n    <Provider store={store}>\n        <App /> \n    </Provider>,\n    document.getElementById('site')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}